---
title: "500_Check_AqMexport_Milfersk_2021"
format: html
---

* Check export file exported from Aquamonitor, for use in Vannmiljø   
* Also chenge file if necessary


## 1. Setup  

### Settings  

```{r}

string_saved_data <- "Milfersk_2021"

```

### Packages and scripts    

```{r, results='hide', warning=FALSE, message=FALSE}

library(niRvana)
library(dplyr)
library(purrr)
library(lubridate)
library(readxl)
library(ggplot2)
library(tidyr)
# library(fuzzyjoin)   # regex_full_join

source("../Milkys/991_Vannmiljo_snippets_functions.R")
source("../Milkys/992_Vannmiljo_Urban_fjord_functions.R")
# source("../Milkys/994_Industry_data_functions.R")         # for add_coordinates()
source("0001_Functions_sql_and_more.R")

knitr::opts_chunk$set(results = 'hold')

```

### Codes  

```{r}

lookup_medium <- read_excel("Data_from_Vannmiljo/Codes/Vannmiljø_medium_2023-06-23.xlsx")
lookup_samplingmethods <- read_excel("Data_from_Vannmiljo/Codes/Vannmiljø_prøvetakingsmetoder_2023-06-23.xlsx")

```


## 2. Biota and sediments  

### Read file   

```{r}

fn <- "Data_to_Vannmiljo/Milfersk_2021_gwme0lf.xlsx"

df_stations <- read_excel(fn, sheet = "Vannlokaliteter")
dat_raw <- read_excel(fn, sheet = "Vannregistreringer")

dat <- dat_raw %>%
  mutate(
    time = ymd(Tid_provetak),
    year = year(time)) %>%
  # Add 'Medium_name' to data  
  left_join(
    lookup_medium %>% select(MediumID, Name) %>% rename(Medium_name = Name), 
    by = c("Medium_id" = "MediumID")) %>%
  # Add 'Sampling_name' to data  
  left_join(
    lookup_samplingmethods %>% select(SamplingMethodID, Name) %>% rename(Sampling_name = Name), 
    by = c("Provetakmetode_id" = "SamplingMethodID")) %>%
  # Add 'Station_name' to data  
  left_join(
    df_stations %>% select(Kilde_id, Navn) %>% rename(Station_name = Navn), 
    by = c("Vannlok_kode" = "Kilde_id"))
  

```

### Tables   

```{r}

# xtabs(~Vannlok_kode + Medium_id, dat)
# xtabs(~Station_name + Medium_name, dat)

dat %>%
  count(Station_name, Medium_name) %>%
  knitr::kable()

dat %>%
  count(Station_name, Medium_name, Sampling_name) %>%
  knitr::kable()

```

## 3. Fix 'Provetakmetode_id' of water samples  

### Water samples with particle and water phase   

* Where do we have such water samples?  
    - For each of 2 samples of WWTP HIAS ('Avløpsvann og avløpsslam')   
    - For each of 2 samples of storm water ('Hamar overvann')  
    - Note: no sediment ('avløpsslam') taken from WWTP HIAS, see 'All_results MILFERSK2021.xlsx' in 'Input_data\2021'    
    
* Codes for Provetakmetode_id *should* be 
    - Water - water fraction: 'NS-ISO 5667-6:2014-1'  
    - Water - part. fraction: 'NS-ISO 5667-17:2008D'  
    - For info: actual sediment from WWTP is: 'NS-ISO 5667-17:2008B'   
    
* Codes for Provetakmetode_id given in export file now (see below):  
    - WWTP HIAS ('Avløpsvann og avløpsslam'): 'NS-ISO 5667-6:2014-1' for both   
    - Hamar overvann: 'UKJENT' for both   


### WWTP HIAS

* Example shown below for WWTP HIAS, with Hg as example    
    - also see top row in 'All_results MILFERSK2021.xlsx' in 'Input_data\2021'    


#### In Nivabase  

* Particle fraction given with '-R'  

```{r}

library(niRvana)

source("../Milkys/991_Vannmiljo_snippets_functions.R")
source("../Milkys/992_Vannmiljo_Urban_fjord_functions.R")
source("../Milkys/994_Industry_data_functions.R")         # for add_coordinates()

source("500_Check_AqMexport_functions.R")    # Overwrites 'get_water_chemistry_from_stations' with a version that includes VALUE_ID   

# debugonce(get_stations_from_project)

df_projects <- get_projects()   
df_stations <- get_stations_from_project("MILFERSK 2021-2025", exact = TRUE)

df_samples_water <- get_nivabase_selection(
  "*", "WATER_SAMPLES",
  "STATION_ID", df_stations$STATION_ID)
dat_nb_water <- get_water_chemistry_from_stations(unique(df_samples_water$STATION_ID), 2017:2021)

dat_nb_water %>%
  filter(NAME %in% c("Hg", "Hg-P"),
         STATION_CODE == "HIAS") %>%
  select(WATER_SAMPLE_ID:SAMPLE_DATE, -METHOD_ID, VALUE_ID)

```

#### In export file  

```{r}

dat %>%
  filter(Parameter_id %in% "HG",
         Station_name == "Avløpsvann og avløpsslam",
         Medium_name == "Avløpsvann renset") %>%
  select(ID_lokal, Parameter_id, Medium_id, Medium_name, Provetakmetode_id, Tid_provetak, Verdi)

```

### Hamar overvann

* As previous example, but station = Hamar overvann, still with Hg as example    
    - also see top row in 'All_results MILFERSK2021.xlsx' in 'Input_data\2021'    

#### In Nivabase  

* Particle fraction given with '-R'  

```{r}

dat_nb_water %>%
  filter(NAME %in% c("Hg", "Hg-P"),
         STATION_CODE == "H_overvann") %>%
  select(WATER_SAMPLE_ID:SAMPLE_DATE, -METHOD_ID, VALUE_ID)

```

#### In export file  

```{r}

dat %>%
  filter(Parameter_id %in% "HG",
         Station_name == "Hamar overvann") %>%
  select(ID_lokal, Parameter_id, Medium_id, Medium_name, Provetakmetode_id, Tid_provetak, Verdi)

```

### Provetakmetode_id  

```{r}

dat %>%
  filter(Station_name == "Avløpsvann og avløpsslam",
         Medium_name == "Avløpsvann renset") %>%
  xtabs(~Provetakmetode_id, .)

dat %>%
  filter(Station_name == "Hamar overvann") %>%
  xtabs(~Provetakmetode_id, .)

```



### Make the change  

#### Get VALUE_ID for particle phase samples  

```{r}

dat_nb_water_part <- dat_nb_water %>%
  # Get rows with NAME ending with '-P'   
  filter(grepl("-P$", NAME))

# Check all
# xtabs(~NAME, dat_nb_water_part)

# Check some
xtabs(~NAME, dat_nb_water_part) %>% head(5)

VALUE_ID_part <- unique(dat_nb_water_part$VALUE_ID)
ID_lokal_part <- paste0("NIVA@WC@", VALUE_ID_part)

cat("\n")

# Check 1
cat("Some of the 'ID_lokal' values: \n")
head(ID_lokal_part)  

cat("\n")

cat("Number of values to change: \n")
nrow(dat_nb_water_part)
length(ID_lokal_part)  

```

#### Change 'dat'   

* Makes 'dat_revised'  

```{r}

cat("----------------------------------------------------------------------------------------------------------------------------------------\n")
cat("Before correction: \n")
cat("----------------------------------------------------------------------------------------------------------------------------------------\n")
xtabs(~Station_name + Provetakmetode_id, dat)

dat_revised <- dat %>%
  mutate(
    Provetakmetode_id = case_when(
      ID_lokal %in% ID_lokal_part ~ 'NS-ISO 5667-17:2008D',         # all particle-phase (WWTP and 'Hamar overvann' )
      Station_name %in% 'Hamar overvann' ~ 'NS-ISO 5667-6:2014-1',  # the rest of the samples from 'Hamar overvann' should be water phase
      TRUE ~ Provetakmetode_id)                                     # the rest is unchanged  
  )

cat("----------------------------------------------------------------------------------------------------------------------------------------\n")
cat("After correction: \n")
cat("----------------------------------------------------------------------------------------------------------------------------------------\n")
xtabs(~Station_name + Provetakmetode_id, dat_revised)

  
```


### Write 'dat_revised' to excel  

```{r}

dat_revised_orig_columns <- dat_revised %>%
  select(-time, -year, -Medium_name, -Sampling_name, -Station_name)  

if (ncol(dat_revised_orig_columns) != ncol(dat_raw)){
  stop("The number of columns has changed")
}

check_names <- names(dat_revised_orig_columns) == names(dat_raw)
if (mean(check_names) < 1){
  stop("The names of columns has changed")
}

if (nrow(dat_revised_orig_columns) != nrow(dat_raw)){
  stop("The number of rows has changed")
}

fn2 <- "Data_to_Vannmiljo/Milfersk_2021_gwme0lf_revised.xlsx"
writexl::write_xlsx(
  list(
    Vannlokaliteter = df_stations,
    Vannregistreringer = dat_revised_orig_columns),
  fn2
)

```




