---
title: "100_Labware_Urban_2024"
format: html
---

## Read samples from Labware LIMS   
- Script 1**_Labware_[program]_[year]     
- function get_labware_samples    
- for comparing samples in Labware with samples in report, and (later) with other data   

## 2024:
* Message from Aquamonitor, when trying to male Vannimjø files:   
"Tissue type: (9) Annet, mangler kobling til medium. Dette legges inn manuelt med tabellen VANNMILJO.CONV_MEDIUM"
    - meaning: Add matrix conversion for XX-Annet in VANNMILJO.CONV_MEDIUM - see "TISSUE = Annet" below     
* Also: are water samples with water and particle phase analysed separately, correctly entered into Labware?
    - Stored as "Stormwater 2; Particles" and "Stormwater 2; Water" - does this work?
    - see "Check water samples"  

## 1. Settings  

### For filenames  
```{r}

program_year <- "Urban_2024"
current_year <- 2024

```

## 2. Packages and functions  
```{r}

library(niRvana)
library(dplyr)
library(purrr)
library(lubridate)
library(readxl)
library(ggplot2)
library(ggeasy)    # easy_ functions
library(tidyr)  
library(knitr)     # for kable
library(glue)      # alternative to paste()  
# library(fuzzyjoin)   # regex_full_join

source("../Milkys/991_Vannmiljo_snippets_functions.R")
source("../Milkys/992_Vannmiljo_Urban_fjord_functions.R")
source("../Milkys/994_Industry_data_functions.R")         # for add_coordinates()
source("0001_Functions_sql_and_more.R")

knitr::opts_chunk$set(results = 'hold')

```

## 3. Get all samples  

### Find projects/samples     
```{r}

df_proj <- get_nivabase_data("select PROSJEKT, ANALYSEOPPDRAG from NIVADATABASE.LABWARE_CHECK_SAMPLE where PROSJEKT = 'O 210135;ANA - Miljøgifter i en urban fjord (2021-2026)'") 

df_proj <- get_nivabase_data("select PROSJEKT, ANALYSEOPPDRAG from NIVADATABASE.LABWARE_CHECK_SAMPLE where PROSJEKT like '%urban%'") %>%
  distinct(PROSJEKT, ANALYSEOPPDRAG)

df_samples_all <- get_nivabase_data("select * from NIVADATABASE.LABWARE_CHECK_SAMPLE where PROSJEKT like '%urban%'")

df_samples_all <- df_samples_all %>%
  mutate(
    year = year(SAMPLED_DATE),
    year_from_textid = substr(df_samples_all$TEXT_ID, 4, 7) %>% as.numeric())

ggplot(df_samples_all, aes(x = SAMPLED_DATE, fill = factor(year_from_textid))) +
  geom_histogram() +
  scale_x_datetime(date_breaks = "2 months") +
  easy_rotate_x_labels(angle = -45)

ggplot(df_samples_all %>% filter(year_from_textid == current_year), 
       aes(x = SAMPLED_DATE)) +
  geom_histogram(fill = "red4") +
  scale_x_datetime(date_breaks = "1 months") +
  easy_rotate_x_labels(angle = -45)

# Seal blubber samples in "early 2021" which has TEXT_ID for 2022 must have wrong SAMPLE_DATE   
# See below

# xtabs(~addNA(year) + addNA(year_from_textid), df_samples_all)  
# NOTE: 2022 data (acc. to text ID) with no date

```


### Get all samples 

- ANALYSEOPPDRAG set by comparing with excel 'Samlede resultater 2022_Urbanfjord'   
- https://niva365.sharepoint.com/:x:/r/sites/Miljgifterienurbanfjord2021-2026/_layouts/15/Doc.aspx?sourcedoc=%7B3C315A97-1A5F-4B0C-BDA5-C87DD05BF0A7%7D&file=Samlede%20resultater%202022_Urbanfjord.xlsx&action=default&mobileredirect=true   




## 4. Samples in current year       
```{r}

df_lab <- df_samples_all %>% 
  dplyr::filter(year_from_textid %in% current_year) %>% # nrow()
  arrange(TEXT_ID)

```

### Check columns that should be there     

* 2024: AQUAMONITOR_CODE lacking for blanks, as it should be  

```{r}

check <- check_lims_samples(df_lab)

```

### Tables  

#### Stations  

* NOTE: Station lacking for 79 samples ! 

```{r}

df_lab %>%
  count(AQUAMONITOR_ID, AQUAMONITOR_CODE, AQUAMONITOR_NAME) 

```

### Check water samples - whether particles/water phase is given correctly they are correct 

#### Water samples from one station (one sample in 2024, with water+particle phase)     
    - Stored as "Stormwater 2; Particles" and "Stormwater 2; Water" this year  
    - Stored with "(P)" and "(W)" previous years - is this the correct way?  

```{r}

df_samples_all %>%
  filter(AQUAMONITOR_CODE == "Urban #2") %>% 
  arrange(SAMPLED_DATE) %>% # View()
  select(SAMPLE_TYPE, SAMPLED_DATE, DESCRIPTION, AQUAMONITOR_CODE) 

```


#### Samples where station is lacking  
#### Samples where station is lacking and species not given   

* None lacking except 'blankprøve'  
* See 2022 for examples of code  


#### Check dates  

* OK 

```{r}

df_lab %>%
  count(AQUAMONITOR_ID, AQUAMONITOR_CODE, AQUAMONITOR_NAME, SAMPLED_DATE) %>% 
  mutate(substr(AQUAMONITOR_NAME, 1, 20)) %>% 
  arrange(SAMPLED_DATE)

```

### Matrix  

```{r}

df_lab %>%
  count(SAMPLE_TYPE, TISSUE)

```

### TISSUE == Annet  

* Message from Aquamonitor: Add matrix conversion for XX-Annet in VANNMILJO.CONV_MEDIUM  
    - VANNMILJO.CONV_MEDIUM is the table convertion TISSUE in Labware to MATRIX in Vannmiljø  
    - However, we shouldn't do that for 'XX-Annet', we should change it to correct TISUUE in Labware    

#### Check which samples these are   

* These are all moss  

```{r}

df_lab %>%
  filter(TISSUE == "XX-Annet") %>% 
  select(DESCRIPTION, AQUAMONITOR_CODE, SPECIES, TISSUE)  

```
#### Check Vannmiljø 

* Check https://vannmiljokoder.miljodirektoratet.no/medium?q=mose  
    - or API: https://vannmiljoapi.miljodirektoratet.no/api/Public/GetMediumList  
* What we need is "BPV"
    - "MediumID": "BPV",
    - "Name": "Biota plantevev",
    - "Description": "Vevsprøver fra terrestriske planter f.eks. etasjemose og barnåler.  Analyseresultat angis i våtvekt."

#### Check VANNMILJO.CONV_MEDIUM   

* NIVA_CODE is the name that should be given in Labware  
* For BPV (moss tissue), that is PLV  

```{r}

df_lookup_tissue <- get_nivabase_data(
  "select TISSUE_ID,TISSUE_NAME, NIVA_CODE from NIVADATABASE.BIOTA_TISSUE_TYPES") 

df_convmedium <- get_nivabase_data(
  "select TISSUE_ID, MEDIUM_ID, DATATYPE_ID, STATION_TYPE_ID from VANNMILJO.CONV_MEDIUM") %>% 
  left_join(
    df_lookup_tissue, 
    by = "TISSUE_ID", 
    relationship = "one-to-one")

df_convmedium %>% 
  filter(MEDIUM_ID %in% "BPV")

```


#### Just for reference, check older samples with this tissue  

* Given as 'PLV-Plantevev'  

```{r}

df_plantevev_examples <- get_nivabase_data(
  "select * from NIVADATABASE.LABWARE_CHECK_SAMPLE where TISSUE like '%PLV%'")


```


#### Just for curiosity, check if there are other tables with MEDIUM_ID  

```{r}
get_nivabase_data(
"select OWNER,TABLE_NAME from ALL_TAB_COLUMNS
where column_name like '%MEDIUM_ID%'")

```


## 6. Save  

```{r}

fn <- glue::glue("Data/100_dat_lab_{program_year}_{today(tzone = 'UTC')}.rds")
fn

saveRDS(df_lab, fn)


if (FALSE){
  
  # Read back
  pattern <- glue::glue("100_dat_lab_{program_year}.*rds")
  fns <- dir("Data", pattern) %>% rev()
  fns
  fn <- paste0("Data/", head(fns, 1))
  df_lab <- readRDS(fn)
  table(df_lab$ANALYSEOPPDRAG)
  
  # Get ANALYSEOPPDRAG for SQL
  options(useFancyQuotes = FALSE)
  df_lab$ANALYSEOPPDRAG %>% unique() %>% sQuote() %>% paste(collapse = ", ")
  
}
```

## APPENDIX 1: Labware values   

### One water sample with water + particle phase (Station "Urban #2")  

* Particle phase are always AQUAMONITOR_UNIT = NA   
* Correct: NG_P_L_2 -> ng/L 
* Correct: NG_P_ML -> ug/L 
* But some have UNITS = "NG_P_L_2" but AQUAMONITOR_UNIT "µg/L" or "µg/l"  

```{r}

check <- get_nivabase_selection(
  "*", "LABWARE_IMPORT", "TEXT_ID", c("NR-2024-04475", "NR-2024-04482"), values_are_text = TRUE)  

check %>%
  count(DESCRIPTION, UNITS, AQUAMONITOR_UNIT)

```

### Check up on data with discprepancy between UNITS and AQUAMONITOR_UNIT

```{r}

check %>%
  filter(UNITS == "NG_P_L_2" &  AQUAMONITOR_UNIT %in% c("µg/L", "µg/l")) %>%
  select(DESCRIPTION, REPORTED_NAME, NUMERIC_ENTRY, UNITS, AQUAMONITOR_UNIT, VERDI_I_AQUAMONITOR)

```
### Check up on data with no AQUAMONITOR_UNIT

```{r}

check %>%
  filter(is.na(AQUAMONITOR_UNIT)) %>%
  select(DESCRIPTION, REPORTED_NAME, NUMERIC_ENTRY, UNITS, AQUAMONITOR_UNIT, VERDI_I_AQUAMONITOR)

```

## APPENDIX 2: SQL examples  

```{r}

if (FALSE){
  # don't run this by accident
  
# all water samples in 2024, all columns  
df_samples_water_all <- get_nivabase_data("
select *
from NIVADATABASE.LABWARE_CHECK_SAMPLE 
where PROSJEKT like '%urban%' 
and substr(TEXT_ID,4,4) = '2023'
and SAMPLE_TYPE = 'FERSKVANN'
")

# LIMS sample data
# all accepted water samples with station in 2024, selected columns  
df_samples_water <- get_nivabase_data("
select a.TEXT_ID, a.DESCRIPTION, a.AQUAMONITOR_CODE, b.WATER_SAMPLE_ID 
from NIVADATABASE.LABWARE_CHECK_SAMPLE a
left join NIVADATABASE.LABWARE_WSID b on TEXT_ID = LABWARE_TEXT_ID 
where PROSJEKT like '%urban%' 
and substr(TEXT_ID,4,4) = '2023'
and SAMPLE_TYPE = 'FERSKVANN'
and AQUAMONITOR_CODE is not null
and STATUS = 'Ferdig'
order by TEXT_ID
")
write_excel_csv(df_samples_water, "Data/100_dat_lab_Urban_2023_2024-30-05.csv")


# LIMS sample data from one sample with both phases 
check <- get_nivabase_data("
select a.TEXT_ID, a.DESCRIPTION, a.AQUAMONITOR_CODE, a.SAMPLED_DATE, b.WATER_SAMPLE_ID 
from NIVADATABASE.LABWARE_CHECK_SAMPLE a
left join NIVADATABASE.LABWARE_WSID b on TEXT_ID = LABWARE_TEXT_ID 
where TEXT_ID in ('NR-2023-06748', 'NR-2023-06749') 
order by TEXT_ID
")

# LIMS concentration data from one sample with both phases 
check <- get_nivabase_data("
  select *  
  from NIVADATABASE.LABWARE_IMPORT 
  where TEXT_ID in ('NR-2023-06748', 'NR-2023-06749') 
  ")

# Summarize units for one sample with both phases  
get_nivabase_data("
select TEXT_ID, DESCRIPTION, UNITS, AQUAMONITOR_UNIT, count(*)
from NIVADATABASE.LABWARE_IMPORT 
where TEXT_ID in ('NR-2023-06748', 'NR-2023-06749')
group by TEXT_ID, DESCRIPTION, UNITS, AQUAMONITOR_UNIT
order by TEXT_ID, DESCRIPTION, UNITS, AQUAMONITOR_UNIT; 
")

# wrong units linked?
get_nivabase_data("
select DESCRIPTION, REPORTED_NAME, NUMERIC_ENTRY, UNITS, AQUAMONITOR_UNIT
from NIVADATABASE.LABWARE_IMPORT 
where TEXT_ID in ('NR-2023-06748', 'NR-2023-06749')
and UNITS = 'NG_P_L_2' 
and AQUAMONITOR_UNIT not in ('ng/L', 'ng/l');
")

# lacking unit
get_nivabase_data("
select DESCRIPTION, REPORTED_NAME, NUMERIC_ENTRY, UNITS, AQUAMONITOR_UNIT
from NIVADATABASE.LABWARE_IMPORT 
where TEXT_ID in ('NR-2023-06748', 'NR-2023-06749')
and UNITS = 'NG_P_L_2' 
and AQUAMONITOR_UNIT is null;
")

# Nivabase dta for one sample with both phases   
# They all have two methods with same name  
df_nb_example <- get_nivabase_data("
select a.SAMPLE_DATE, a.DEPTH1, a.WATER_SAMPLE_ID, b.LABWARE_TEXT_ID, c.VALUE, c.FLAG1, c.METHOD_ID, d.NAME
from NIVADATABASE.WATER_SAMPLES a
left join NIVADATABASE.LABWARE_WSID b on a.WATER_SAMPLE_ID = b.WATER_SAMPLE_ID 
left join NIVADATABASE.WATER_CHEMISTRY_VALUES c on a.WATER_SAMPLE_ID = c.WATER_SAMPLE_ID 
left join NIVADATABASE.METHOD_DEFINITIONS d on c.METHOD_ID = d.METHOD_ID  
where b.LABWARE_TEXT_ID in ('NR-2023-06748', 'NR-2023-06749');
")

table(df_nb_example$NAME) |> table()
table(df_nb_example$METHOD_ID) |> table()

}

```
### Check latest updates  
```{r}

check <- get_nivabase_data("
select * from all_tab_modifications where TABLE_OWNER in 'NIVADATABASE' and TIMESTAMP > (current_date - INTERVAL '1' DAY);
")

check2 <- get_nivabase_data("
select * from NIVADATABASE.SEARCH_UPDATE where ENTERED_DATE > (current_date - INTERVAL '1' DAY);
")

```

