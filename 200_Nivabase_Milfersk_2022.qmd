---
title: "Script 200_Nivabase_Milfersk_2022"
format: html
---

3b. Read data from Nivabase   
- Script 200_Nivabase_[program]_[year]     
- functions  
    - get_stations_from_project_id  
    - get_specimens_from_stationdata   
    - get_biota_chemistry  
    - get_water_chemistry_from_stations  
    - get_sediment_chemistry_from_stations  
    
## 1. Setup  

### For filenames  
```{r}

program_year <- "Milfersk_2022"
sampling_year <- 2022

```

### Labware data  

```{r}

dat_lab <- readRDS("Data/100_dat_lab_Milfersk_2022_2023-06-22.rds")

```


### Packages and functions  
```{r}

library(niRvana)
library(dplyr)
library(purrr)
library(lubridate)
library(readxl)
library(ggplot2)
library(tidyr)
library(knitr)     # for kable
# library(fuzzyjoin)   # regex_full_join

source("../Milkys/991_Vannmiljo_snippets_functions.R")
source("../Milkys/992_Vannmiljo_Urban_fjord_functions.R")
source("../Milkys/994_Industry_data_functions.R")         # for add_coordinates()

knitr::opts_chunk$set(results = 'hold')

```


## 2.  Check existing NIVAbasen data    

```{r}

df_projects <- get_projects()   

# df_stations <- get_stations_from_project("MILFERSK", exact = FALSE)
df_stations <- get_stations_from_project("MILFERSK 2021-2025", exact = TRUE)

nrow(df_stations)

```

#### Get all data    

* NOTE: No water - as stations haven't been defined for the water samples (see script 100)   

```{r}

# Code from script 0010  

# 
## Biota samples
#

df_specimens <- get_specimens_from_stationdata(df_stations, years = sampling_year)
message("No. of specimens, biota: ", nrow(df_specimens))
dat_nb_biota <- get_biota_chemistry(sampling_year, df_specimens, df_stations, report_samples = TRUE)

dat_nb_biota <- dat_nb_biota %>%
  mutate(Year = year(SAMPLE_DATE))

# 421  

#
## Water samples  
#

df_samples_water <- get_nivabase_selection(
  "*",
  "WATER_SAMPLES",
  "STATION_ID",
  df_stations$STATION_ID
)
message("No. of samples, water: ", nrow(df_samples_water))

# Adds "SAMPLE_TYPE", "SAMPLE_NUMBER", "DESCRIPTION" and "n_labware" from Labware

# debugonce(get_water_chemistry_from_stations)
dat_nb_water <- get_water_chemistry_from_stations(unique(df_samples_water$STATION_ID), sampling_year)


df_samples_sediment <- get_nivabase_selection(
  "*",
  "SEDIMENT_SAMPLES",
  "STATION_ID",
  df_stations$STATION_ID
)
message("No. of samples, sediment: ", nrow(df_samples_sediment))

dat_nb_sediment <- get_sediment_chemistry_from_stations(df_stations$STATION_ID, years = sampling_year)

dat_nb_sediment_methods <- get_chemistry_methods(method_id = unique(dat_nb_sediment$METHOD_ID))

dat_nb_sediment <- dat_nb_sediment %>%
  left_join(dat_nb_sediment_methods, by = "METHOD_ID") %>%
  mutate(Year = year(SAMPLE_DATE)) 


```

## 3. Couple Labware TEXT_ID per Nivabase SAMPLE_ID

### Get labware sample table  

```{r}

dat_labsamples <- readRDS("Data/100_dat_lab_Milfersk_2022_2024-01-16.rds")

```


### Get Labware sample ID     

```{r}

# get_nivabase_data("select * from NIVADATABASE.LABWARE_BSID where rownum < 6")  
# get_nivabase_data("select * from NIVADATABASE.LABWARE_WSID where rownum < 6")  
# get_nivabase_data("select * from NIVADATABASE.LABWARE_SLICE_ID where rownum < 6")  

# unique(dat_nb_biota$SAMPLE_ID)

dat_lab_biota <- get_nivabase_selection(
  c("BIOTA_SAMPLE_ID, LABWARE_SAMPLE_NUMBER, LABWARE_TEXT_ID"),
  "LABWARE_BSID", 
  "BIOTA_SAMPLE_ID", unique(dat_nb_biota$SAMPLE_ID)) 
# NO WATER at this stage  
# dat_lab_water <- get_nivabase_selection(
#   c("WATER_SAMPLE_ID, LABWARE_SAMPLE_NUMBER, LABWARE_TEXT_ID"),
#   "LABWARE_WSID", 
#   "WATER_SAMPLE_ID", unique(dat_nb_water$WATER_SAMPLE_ID)) 

dat_lab_sediment <- get_nivabase_selection(
  c("SLICE_ID, LABWARE_SAMPLE_NUMBER, LABWARE_TEXT_ID"),
  "LABWARE_SLICE_ID", 
  "SLICE_ID", unique(dat_nb_sediment$SLICE_ID)) 

```

### Add labware TEXT_ID to the data?  

* Not done, as there may be two (or more?) Labware TEXT_ID per Nivabase SAMPLE_ID   

* Demonstrated for biota  

* Duplicate of BIOTA_SAMPLE_ID = 247003  
    - Labware numbers NR-2021-07918 (DESCRIPTION = ØM-L-1) and NR-2021-11104 (DESCRIPTION = ØM-L-BP)  
    - Seems to be two rounds of analyses: Some parameters has a value for DESCRIPTION = ØM-L-1 and value = "T" fpr DESCRIPTION = ØM-L-BP, some have the other  

```{r}

# Expect this to have zero rows:
check <- dat_lab_biota %>% 
  add_count(BIOTA_SAMPLE_ID) %>% 
  filter(n > 1) %>%
  left_join(dat_labsamples %>% select(TEXT_ID, DESCRIPTION, TISSUE), by = c("LABWARE_TEXT_ID" = "TEXT_ID"))

if (nrow(check) == 0){
  message("No duplicates of any SAMPLE_ID")
} else {
  stop("Duplicates of any SAMPLE_ID - see script 200_Nivabase_Milfersk_2021")
}

```
#### Number of observations in 

```{r}

sample_id_nb <- check$BIOTA_SAMPLE_ID[1]
sample_id_labware <- check %>% filter(BIOTA_SAMPLE_ID == sample_id_nb) %>% pull(LABWARE_TEXT_ID)

dat_nb_biota %>%
  filter(SAMPLE_ID == sample_id) %>%
  count(NAME, UNIT)

check_labware_values <- get_nivabase_selection(
  "TEXT_ID, REPORTED_NAME, ENTRY_QUALIFIER, NUMERIC_ENTRY, UNITS", 
  "LABWARE_IMPORT", 
  "TEXT_ID", 
  check$LABWARE_TEXT_ID, values_are_text = TRUE) 

# Inspect check2
# In most cases, of the two TEXT_ID per SAMPLE_ID, one has 
#   56 substances, the other has 5 substances 
check2 <- check %>%
  left_join(
    check_labware_values %>% distinct(TEXT_ID, REPORTED_NAME) %>% count(TEXT_ID, name = "n_substances"), 
    by = c("LABWARE_TEXT_ID" = "TEXT_ID") 
  )

```

#### Check case of 56 + 5 substances 

* The 5 substances are isotope values  

```{r}

check2_example <- check2 %>%
  filter(BIOTA_SAMPLE_ID == 248670)

text_id_example <- check2_example %>%
  pull(LABWARE_TEXT_ID)

check_labware_values %>%
  filter(TEXT_ID %in% text_id_example) %>%
  group_by(TEXT_ID) %>%
  slice(1:5)


```
#### Check case of 50 + 50 substances 

* All are PFAS variables, but there are two measurements of each substance  
* Only one (the first one) has been imported to Nivabase  

```{r}

check2_example <- check2 %>%
  filter(BIOTA_SAMPLE_ID == 250593)

text_id_example <- check2_example %>%
  pull(LABWARE_TEXT_ID)

# Check these data:    
check_labware_values_example <- check_labware_values %>%
  arrange(REPORTED_NAME, TEXT_ID) %>%
  filter(TEXT_ID %in% text_id_example)
# View(check_labware_values_example)

check_labware_values_example  %>%
  filter(REPORTED_NAME == "PFOS")

dat_nb_biota %>%
  filter(SAMPLE_ID %in% check2_example$BIOTA_SAMPLE_ID & NAME == "PFOS")

```



#### Number of parameters per sample    

* n_samples = 2 for water samples  
    - represents water and particle fractions from the same physical sample    
    - 'Avløpsvann og avløpsslam' and 'Hamar overvann'   
* n_samples = 3 for trout (ørret) and surface water    
    - represents 3 physical samples      

```{r}

dat_nb_biota_names <- dat_nb_biota %>%
  count(STATION_NAME, LATIN_NAME, TISSUE_NAME, NAME, Year, name = "n_samples")
df1 <- dat_nb_biota_names %>%
  count(STATION_NAME, LATIN_NAME, TISSUE_NAME, n_samples)
# df1

dat_nb_water_names <- dat_nb_water %>%
  mutate(LATIN_NAME = NA, TISSUE_NAME = NA) %>%
  count(STATION_NAME, LATIN_NAME, TISSUE_NAME, NAME, Year, name = "n_samples")
df2 <- dat_nb_water_names %>%
  count(STATION_NAME, LATIN_NAME, TISSUE_NAME, n_samples)
# df2

dat_nb_sediment_names <- dat_nb_sediment %>%
  mutate(LATIN_NAME = NA, TISSUE_NAME = NA) %>%
  count(STATION_NAME, LATIN_NAME, TISSUE_NAME, NAME, Year, name = "n_samples")
df3 <- dat_nb_sediment_names %>%
  count(STATION_NAME, LATIN_NAME, TISSUE_NAME, n_samples)
# df3

bind_rows(df1, df2, df3)


```


## 4. Save  

```{r}

saveRDS(dat_nb_biota, paste0("Data/200_dat_nb_biota_", program_year, "_", today(), ".rds"))
saveRDS(dat_nb_water, paste0("Data/200_dat_nb_water_", program_year, "_", today(), ".rds"))
saveRDS(dat_nb_sediment, paste0("Data/200_dat_nb_sediment_", program_year, "_", today(), ".rds"))

if (FALSE){
  files <- dir("Data", "200_dat_nb_sediment_", full.names = TRUE) %>% sort(decreasing = TRUE)
  dat_nb_sediment <- readRDS(files[1])
  table(dat_nb_sediment$SLICE_ID)
  
    files <- dir("Data", "200_dat_nb_biota_", full.names = TRUE) %>% sort(decreasing = TRUE)
  dat_nb <- readRDS(files[1])

}

```