---
title: "100_Labware_Milfersk_2022"
format: html
---

## Read samples from Labware LIMS   
- Script 1**_Labware_[program]_[year]     
- function get_labware_samples    
- for comparing samples in Labware with samples in report, and (later) with other data   


```{r}

# EXTRA:
# WHAT'S THIS??
# MJA DATA - LACKING STATION FOR ALL  

# check3 <- get_nivabase_data(
#   "SELECT * FROM NIVADATABASE.LABWARE_CHECK_SAMPLE WHERE PROSJEKT LIKE '%ANAEX%'")   


```



## 1. Settings  

### For filenames  
```{r}

program_year <- "Milfersk_2022"

```

## 2. Packages and functions  
```{r}

library(niRvana)
library(dplyr)
library(purrr)
library(lubridate)
library(readxl)
library(ggplot2)
library(tidyr)  
library(knitr)     # for kable
library(glue)      # alternative to paste()  
# library(fuzzyjoin)   # regex_full_join

source("../Milkys/991_Vannmiljo_snippets_functions.R")
source("../Milkys/992_Vannmiljo_Urban_fjord_functions.R")
source("../Milkys/994_Industry_data_functions.R")         # for add_coordinates()

knitr::opts_chunk$set(results = 'hold')

```

## 3. Get all samples  

### Find projects   
```{r}

if (FALSE){
  
  # Used to find the project strings ('proj' below) 
  
  # "milfersk" mentioned in PROSJEKT    
  df_proj1 <- get_nivabase_data("select PROSJEKT, ANALYSEOPPDRAG from NIVADATABASE.LABWARE_CHECK_SAMPLE where lower(PROSJEKT) like '%milfersk%'")
  
  # Samples with "17197" mentioned in PROSJEKT    
  df_proj2 <- get_nivabase_data("select PROSJEKT, ANALYSEOPPDRAG from NIVADATABASE.LABWARE_CHECK_SAMPLE where lower(PROSJEKT) like '%17197%'")
  
  df_proj3 <- get_nivabase_data("select PROSJEKT, ANALYSEOPPDRAG from NIVADATABASE.LABWARE_CHECK_SAMPLE where lower(PROSJEKT) like '%210136%'")
  
  proj <- unique(c(df_proj1$PROSJEKT, df_proj2$PROSJEKT, df_proj3$PROSJEKT))
  oppdrag <- unique(c(df_proj1$ANALYSEOPPDRAG, df_proj2$ANALYSEOPPDRAG, df_proj3$ANALYSEOPPDRAG))
  
}

proj <- c(
  "O 17197 Milfersk", "O 210136;ANAEX O 210136;ANA - Overvåking av miljøgifter i ferskvannsnæringsnett - Milfersk (2021-2026)", 
"O 210136;ANA - Overvåking av miljøgifter i ferskvannsnæringsnett - Milfersk (2021-2026)", 
"O 17197;NIVA_L Miljøgifter i ferskvann og store innsjøer")


```


### Get samples  
```{r}

# Search using ANALYSEOPPDRAG (PROEJCT is problematic due to charcters)
df_lab_all <- get_nivabase_selection(
  "*", "LABWARE_CHECK_SAMPLE", "ANALYSEOPPDRAG", oppdrag, values_are_text = TRUE)   

df_lab_all %>%
  count(PROSJEKT, Year_id = substr(TEXT_ID, 4,7), Year_sample = year(SAMPLED_DATE))

```

## 4. Samples in current year       
```{r}

df_lab <- df_lab_all %>% 
  filter(year(SAMPLED_DATE) == 2022)

```

### Tables  

#### Stations  

* NOTE: Station lacking for 79 samples ! 

```{r}

df_lab %>%
  count(AQUAMONITOR_ID, AQUAMONITOR_CODE, AQUAMONITOR_NAME) 

```

#### Samples where station is lacking  
```{r}

df_lab %>%
  filter(is.na(AQUAMONITOR_ID)) %>% # View()
  count(SAMPLE_TYPE, SPECIES, TISSUE) 

```
#### Samples where station is lacking and species not given   
```{r}

df_lab %>%
  filter(is.na(AQUAMONITOR_ID) & SPECIES == "Ikke angitt") %>% # View()
  count(DESCRIPTION) 

```

#### Check description for water samples   

* 3 samples (probably surface water)  
* HAs PFAS values, see Appendix 1  
* However, according the budget (link below), there should be no water samples in 2022  
    - https://niva365.sharepoint.com/:x:/r/sites/projects1/3604/Shared%20Documents/2022/01%20Project%20management/Budget/Copy%20of%20MILFERSK%20n%C3%A6ringsnett%20budsjett%202021-25_KSL.xlsx?d=w7f6c5391a33c4b96b357b1744fd28a99&csf=1&web=1&e=OIqLJ1

```{r}

df_lab %>%
  filter(is.na(AQUAMONITOR_ID) & SAMPLE_TYPE == "FERSKVANN") %>% # View()
  count(TEXT_ID, DESCRIPTION) 

```

#### Check date  

* OK 

```{r}

df_lab %>%
  count(AQUAMONITOR_ID, AQUAMONITOR_CODE, AQUAMONITOR_NAME, SAMPLED_DATE) 

```



#### Station "Benthic food chain"       

```{r}

df_lab %>%
  filter(AQUAMONITOR_NAME == "Bentisk næringskjede") %>%
  count(AQUAMONITOR_ID, AQUAMONITOR_CODE, AQUAMONITOR_NAME, SPECIES, TISSUE) 

```

#### Overvann samples  

* H1_V, H1_P = sample 1, water and particle fraction  
* H2_V, H2_P = sample 2, water and particle fraction  

```{r}

df_lab %>%
  filter(AQUAMONITOR_NAME == "Hamar overvann") %>%
  count(AQUAMONITOR_ID, AQUAMONITOR_CODE, AQUAMONITOR_NAME, DESCRIPTION) 

```


#### HIAS samples  

* HIAS_S = Actual sediment  
* HIAS1_V, HIAS1_P = sample 1, water and particle fraction
* HIAS2_V, HIAS2_P = sample 2, water and particle fraction  

```{r}

df_lab %>%
  filter(AQUAMONITOR_NAME == "Avløpsvann og avløpsslam") %>%
  count(AQUAMONITOR_ID, AQUAMONITOR_CODE, AQUAMONITOR_NAME, DESCRIPTION) 

```

## 5. Save  

```{r}

fn <- glue::glue("Data/100_dat_lab_{program_year}_{today(tzone = 'UTC')}.rds")
fn

saveRDS(df_lab, fn)

```

## APPENDIX 1: Labware values   

* Water samples: PFAS (old and new) but nothing else   

```{r}

check <- get_nivabase_selection(
  "*", "LABWARE_IMPORT", "TEXT_ID", c("NR-2022-13730", "NR-2022-13731", "NR-2022-13732"), values_are_text = TRUE)   


```

## APPENDIX 2: 3 sedimemnt samples in LIMS, 1 slice ID in Nivadatabase!  

```{r}

check_samp <- readRDS("Data/100_dat_lab_Milfersk_2022_2023-06-22.rds")
writexl::write_xlsx(check_samp, "Data/100_dat_lab_Milfersk_2022_2023-06-22.xlsx")

check_samp %>%
  filter(SAMPLE_TYPE == "SEDIMENT")

id <- check_samp %>%
  filter(SAMPLE_TYPE == "SEDIMENT") %>%
  pull(TEXT_ID)
id
# "NR-2022-10833" "NR-2022-10835" "NR-2022-10834"

df2022 <- get_nivabase_selection(
  "*", "LABWARE_IMPORT", "TEXT_ID", id, values_are_text = TRUE)   

df_slice_id <- get_nivabase_selection(
  "*", "LABWARE_SLICE_ID", "LABWARE_TEXT_ID", id, values_are_text = TRUE) 
# The 3 samples have been given the same SLICE_ID (291863	)

df_slice_id

```

