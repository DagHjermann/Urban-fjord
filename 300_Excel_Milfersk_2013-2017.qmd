---
title: "300_Excel_Milfersk_2013-2017"
format: html
---


## Read excel data from researchers    

* No data in NIVAbasen, so we can add everything from scratch   

- NOTE: the data saved contains two types of errors in the actual values:  
    - negative values for data <LOQ (see 3d and Appendix 1)  
    - mismatch value / unit (see 9b, 11b and in particular 13b, and Appendix 2)    
    
- NOTE 2: use MATRIX_ID instead of MATRIX when making new methods  


## 1. Setup  

### Settings  
```{r}

string_saved_data <- "Milfersk_2013-2017"

```

### Packages and scripts    
```{r}

library(niRvana)
library(dplyr)
library(purrr)
library(lubridate)
library(readxl)
library(ggplot2)
library(tidyr)
library(ggeasy)
library(forcats)
# library(fuzzyjoin)   # regex_full_join

 source("../Milkys/991_Vannmiljo_snippets_functions.R")
 source("../Milkys/992_Vannmiljo_Urban_fjord_functions.R")
# source("../Milkys/994_Industry_data_functions.R")         # for add_coordinates()
source("0001_Functions_sql_and_more.R")

knitr::opts_chunk$set(results = 'hold')

```


## 2. Read data  

### File and sheets    

```{r}

fn <- "Input_data/2013-2019/Milfersk/SI 2013  2014 2015 2016 analysedata Vannmiljø 200621.xlsx"
excel_sheets(fn)

```
### Read on wide format, 2013-2016  

* All these years despite the name of the sheet  

```{r}

dat_wide1 <- read_excel(fn, sheet = "SI 2013 analysedata Vannmiljø",
                         skip = 0, col_names = TRUE, col_types = "text")  

```

#### Some checking  
```{r}

xtabs(~Fangstår + Lokaliter, dat_wide1)  

xtabs(~Fangstår + addNA(Art), dat_wide1)  

xtabs(~Lokaliter + addNA(Art), dat_wide1)  

```


```{r}
dat_all <- read_excel(fn, skip = 3, col_names = TRUE, col_types = "text")  

names(dat_all)
names(dat_all)[38] <- "TBA"
names(dat_all)[39:63] <- paste0("BDE", names(dat_all)[39:63])

# Remove lngth + weight
dat_all <- dat_all[-(4:5)]

```

### Change to long format   

* Also change < and negative numbers to FLAG1 = <  
    - about d13C and d15N, which should be allowed to be negative....

```{r}

dat_raw1 <- dat_wide1 %>%
  select(Lokaliter, Fangstår, Art, `Latinsk navn`, `Sample-ID`, Specimen_no, Specimens,
         `d13C, ‰`:`Triklosan, ng/g vv`) %>%
  pivot_longer(
    cols = `d13C, ‰`:`Triklosan, ng/g vv`, names_to = "Param", values_to = "Value_chr1") 

dat_raw1 <- dat_raw1 %>%
  filter(!Param %in% "Enhet, POPs")

```

### Check first character of number  

* Should only be "<" or a number  
    - with the exception of isotopes ("d13C, ‰", "d15N, ‰")

```{r}

# Exceptions:
sel <- dat_raw1$Param %in% c("d13C, ‰", "d15N, ‰")

# Check
table(substr(dat_raw1$Value_chr1[!sel],1,1))

```
  
### Make VALUE and FLAG1  

```{r}

dat_raw <- dat_raw1 %>%
  mutate(
    Year = as.numeric(Fangstår),
    Value_chr2 = sub(",", ".", Value_chr1, fixed = TRUE),   # in case decimal coma has been used (it has) 
    VALUE = case_when(
      grepl("<", Value_chr2) ~ as.numeric(sub("<", "", Value_chr2)), 
      TRUE ~ as.numeric(Value_chr2)),
    FLAG1 = case_when(
      grepl("<", Value_chr2) ~ "<", 
      TRUE ~ as.character(NA))
    )  

nrow(dat_raw)

dat_raw <- dat_raw %>%
  filter(!is.na(VALUE))

nrow(dat_raw)

```

## 3. Check one parameter  


### Parameters 

```{r}

table(dat_raw$Param)

```


* pick parameter with few under LOQ

```{r}

# BDE47 = 2,2',4,4'-TetBDE 

dat_raw %>% 
  filter(Param == "BDE-47") %>%
  mutate(ID = paste(Lokaliter, Art)) %>%
  ggplot(aes(Year, VALUE, color = is.na(FLAG1))) +
  geom_point()+ 
  facet_wrap(vars(ID))

```
