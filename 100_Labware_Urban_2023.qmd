---
title: "100_Labware_Urban_2023"
format: html
---

## Read samples from Labware LIMS   
- Script 1**_Labware_[program]_[year]     
- function get_labware_samples    
- for comparing samples in Labware with samples in report, and (later) with other data   


## 1. Settings  

### For filenames  
```{r}

program_year <- "Urban_2023"
current_year <- 2023

```

## 2. Packages and functions  
```{r}

library(niRvana)
library(dplyr)
library(purrr)
library(lubridate)
library(readxl)
library(ggplot2)
library(tidyr)  
library(knitr)     # for kable
library(glue)      # alternative to paste()  
# library(fuzzyjoin)   # regex_full_join

source("../Milkys/991_Vannmiljo_snippets_functions.R")
source("../Milkys/992_Vannmiljo_Urban_fjord_functions.R")
source("../Milkys/994_Industry_data_functions.R")         # for add_coordinates()
source("0001_Functions_sql_and_more.R")

knitr::opts_chunk$set(results = 'hold')

```

## 3. Get all samples  

### Find projects/samples     
```{r}

df_proj <- get_nivabase_data("select PROSJEKT, ANALYSEOPPDRAG from NIVADATABASE.LABWARE_CHECK_SAMPLE where PROSJEKT = 'O 210135;ANA - Miljøgifter i en urban fjord (2021-2026)'") 

df_proj <- get_nivabase_data("select PROSJEKT, ANALYSEOPPDRAG from NIVADATABASE.LABWARE_CHECK_SAMPLE where PROSJEKT like '%urban%'") %>%
  distinct(PROSJEKT, ANALYSEOPPDRAG)

df_samples_all <- get_nivabase_data("select * from NIVADATABASE.LABWARE_CHECK_SAMPLE where PROSJEKT like '%urban%'")

df_samples_all <- df_samples_all %>%
  mutate(
    year = year(SAMPLED_DATE),
    year_from_textid = substr(df_samples_all$TEXT_ID, 4, 7) %>% as.numeric())

ggplot(df_samples_all, aes(x = SAMPLED_DATE, fill = factor(year_from_textid))) +
  geom_histogram()
# Seal blubber samples in "early 2021" which has TEXT_ID for 2022 must have wrong SAMPLE_DATE   
# See below

# xtabs(~addNA(year) + addNA(year_from_textid), df_samples_all)  
# NOTE: 2022 data (acc. to text ID) with no date

```


### Get all samples 

- ANALYSEOPPDRAG set by comparing with excel 'Samlede resultater 2022_Urbanfjord'   
- https://niva365.sharepoint.com/:x:/r/sites/Miljgifterienurbanfjord2021-2026/_layouts/15/Doc.aspx?sourcedoc=%7B3C315A97-1A5F-4B0C-BDA5-C87DD05BF0A7%7D&file=Samlede%20resultater%202022_Urbanfjord.xlsx&action=default&mobileredirect=true   




## 4. Samples in current year       
```{r}

df_lab <- df_samples_all %>% 
  dplyr::filter(year_from_textid %in% current_year) %>% # nrow()
  arrange(TEXT_ID)

```

### Check columns that should be there     

```{r}

check <- check_lims_samples(df_lab)

```

### Tables  

#### Stations  

* NOTE: Station lacking for 79 samples ! 

```{r}

df_lab %>%
  count(AQUAMONITOR_ID, AQUAMONITOR_CODE, AQUAMONITOR_NAME) 

```

#### Samples where station is lacking  
#### Samples where station is lacking and species not given   

* None lacking except 'blankprøve'  
* See 2022 for examples of code  


#### Check description for freshwater samples   

* all are blanks  

```{r}

df_lab %>%
  filter(is.na(AQUAMONITOR_ID) & SAMPLE_TYPE == "FERSKVANN") %>% # View()
  count(TEXT_ID, DESCRIPTION) 

```

#### Check dates  

* OK 

```{r}

df_lab %>%
  count(AQUAMONITOR_ID, AQUAMONITOR_CODE, AQUAMONITOR_NAME, SAMPLED_DATE)

```

## 5. Water samples with water and particular phase  

```{r}

df_lab %>%
  filter(
    grepl("(V)", DESCRIPTION, fixed = TRUE) |
    grepl("(W)", DESCRIPTION, fixed = TRUE) |
    grepl("(P)", DESCRIPTION, fixed = TRUE),
  ) %>%
  filter(
    !grepl("Blank", DESCRIPTION, fixed = TRUE)
  ) %>%
  distinct(TEXT_ID, AQUAMONITOR_CODE, DESCRIPTION, SAMPLED_DATE)

```



## 6. Save  

```{r}

fn <- glue::glue("Data/100_dat_lab_{program_year}_{today(tzone = 'UTC')}.rds")
fn

saveRDS(df_lab, fn)

```

## 6. APPENDIX 1: Labware values   

### One water sample with water + particle phase  

* Particle phase are always AQUAMONITOR_UNIT = NA   
* Correct: NG_P_L_2 -> ng/L 
* Correct: NG_P_ML -> ug/L 
* But some have UNITS = "NG_P_L_2" but AQUAMONITOR_UNIT "µg/L" or "µg/l"  

```{r}

check <- get_nivabase_selection(
  "*", "LABWARE_IMPORT", "TEXT_ID", c("NR-2023-06748", "NR-2023-06749"), values_are_text = TRUE)   

check %>%
  count(DESCRIPTION, UNITS, AQUAMONITOR_UNIT)

```

### Check up on data with discprepancy between UNITS and AQUAMONITOR_UNIT

```{r}

check %>%
  filter(UNITS == "NG_P_L_2" &  AQUAMONITOR_UNIT %in% c("µg/L", "µg/l")) %>%
  select(DESCRIPTION, REPORTED_NAME, NUMERIC_ENTRY, UNITS, AQUAMONITOR_UNIT, VERDI_I_AQUAMONITOR)

```

