---
title: "Script 200_Nivabase_Milfersk_2019"
format: html
---

- Script 200_Nivabase_[program]_[year]     
- functions  
    - get_stations_from_project_id  
    - get_specimens_from_stationdata   
    - get_biota_chemistry  
    - get_water_chemistry_from_stations  
    - get_sediment_chemistry_from_stations  
    
**Note:** run *after* the rest of the 2019 data were added using scr. 250  

## 1. Setup  

### For filenames  
```{r}

program_year <- "Milfersk_2019"
sampling_year <- 2019

```

### Labware data  

```{r}

# dat_lab <- readRDS("Data/100_dat_lab_Milfersk_2022_2023-06-22.rds")

```


### Packages and functions  
```{r}

library(niRvana)
library(dplyr)
library(purrr)
library(lubridate)
library(readxl)
library(ggplot2)
library(tidyr)
library(knitr)     # for kable
library(ggeasy)    # easy_ functions
# library(fuzzyjoin)   # regex_full_join

source("../Milkys/991_Vannmiljo_snippets_functions.R")
source("../Milkys/992_Vannmiljo_Urban_fjord_functions.R")
source("../Milkys/994_Industry_data_functions.R")         # for add_coordinates()

knitr::opts_chunk$set(results = 'hold')

```


## 2.  Check existing NIVAbasen data    

```{r}

df_projects <- get_projects()   

df_stations <- get_stations_from_project("MILFERSK", exact = TRUE)
# df_stations <- get_stations_from_project("MILFERSK 2021-2025", exact = TRUE)

```

#### Get all data    

* NOTE: No water - as stations haven't been defined for the water samples (see script 100)   

```{r}

# Code from script 0010  

# 
## BIOTA  
#
cat("\n=====================================\n")
cat("BIOTA\n")
cat("=====================================\n")


df_specimens <- get_specimens_from_stationdata(df_stations, years = sampling_year)
message("No. of specimens, biota: ", nrow(df_specimens))

if (nrow(df_specimens) > 0){
  
  dat_nb_biota <- get_biota_chemistry(sampling_year, df_specimens, df_stations, report_samples = TRUE)
  df_specimens <- df_specimens %>% mutate(Year = year(DATE_CAUGHT))
  dat_nb_biota <- dat_nb_biota %>% mutate(Year = year(SAMPLE_DATE))
  
}

# 421  

#
## WATER  
#
cat("\n=====================================\n")
cat("WATER\n")
cat("=====================================\n")

df_samples_water <- get_nivabase_selection(
  "*",
  "WATER_SAMPLES",
  "STATION_ID",
  df_stations$STATION_ID
) %>% 
  mutate(Year = year(SAMPLE_DATE))
message("No. of samples, water: ", nrow(df_samples_water))

if (nrow(df_samples_water) > 0){
  # Adds "SAMPLE_TYPE", "SAMPLE_NUMBER", "DESCRIPTION" and "n_labware" from Labware
  dat_nb_water <- get_water_chemistry_from_stations(unique(df_samples_water$STATION_ID), sampling_year) %>%
    mutate(Year = year(SAMPLE_DATE))
}

#
## SEDIMENT
#
cat("\n=====================================\n")
cat("SEDIMENT\n")
cat("=====================================\n")

df_samples_sediment <- get_nivabase_selection(
  "*",
  "SEDIMENT_SAMPLES",
  "STATION_ID",
  df_stations$STATION_ID
) %>% 
  mutate(Year = year(SAMPLE_DATE))
         
message("No. of samples, sediment: ", nrow(df_samples_sediment))

if (nrow(df_samples_sediment) > 0){
  
  dat_nb_sediment <- get_sediment_chemistry_from_stations(df_stations$STATION_ID, years = sampling_year)
  dat_nb_sediment_methods <- get_chemistry_methods(method_id = unique(dat_nb_sediment$METHOD_ID))
  dat_nb_sediment <- dat_nb_sediment %>%
    left_join(dat_nb_sediment_methods, by = "METHOD_ID") %>%
    mutate(Year = year(SAMPLE_DATE)) 
  
}


```

### Years  
```{r}

cat("BIOTA\n")
cat("\nSpecimens:\n")
table(df_specimens$Year)
cat("\nMeasurements:\n")
table(dat_nb_biota$Year)

cat("\n===============================\n")
cat("WATER\n")
table(df_samples_water$Year)
# table(dat_nb_water$Year)

cat("\n===============================\n")
cat("SEDIMENT\n")
table(df_samples_sediment$Year)
# table(dat_nb_sediment$Year)

```


## 3. Check  

```{r}

unique(dat_nb_biota$NAME) %>% paste(collapse = " // ")
  
# dat_nb_biota %>%
#   ggplot(aes(NAME, VALUE, color = is.na(FLAG1))) +
#     geom_point() +
#   coord_flip()
  
dat_nb_biota %>%
  filter(NAME == "PFHxDA") %>%
  mutate(Sample = glue::glue("{LATIN_NAME} ({STATION_NAME})")) %>%
  ggplot(aes(Sample, VALUE, color = is.na(FLAG1))) +
  geom_jitter(width = 0.2) +
  coord_flip()

```

